# coding: utf-8

"""
    Example schemas for IoT device with temperature and humidity sensors

    Example schemas compliant with the NGSI-LD OAS metamodel according to ETSI GS CIM 009. 

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ngsi_ld_models.models.humidity_sensor import HumiditySensor

class TestHumiditySensor(unittest.TestCase):
    """HumiditySensor unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> HumiditySensor:
        """Test HumiditySensor
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `HumiditySensor`
        """
        model = HumiditySensor()
        if include_optional:
            return HumiditySensor(
                id = '',
                type = 'HumiditySensor',
                scope = None,
                location = {
                    'key' : null
                    },
                observation_space = {
                    'key' : null
                    },
                operation_space = {
                    'key' : null
                    },
                system_generated_attrs = ngsi_ld_models.models.system_generated_attributes.SystemGeneratedAttributes(
                    created_at = null, 
                    modified_at = null, 
                    deleted_at = null, ),
                humidity = None
            )
        else:
            return HumiditySensor(
                type = 'HumiditySensor',
                humidity = None,
        )
        """

    def testHumiditySensor(self):
        """Test HumiditySensor"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
